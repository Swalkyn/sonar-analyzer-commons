<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>sonar-analyzer-commons-parent</artifactId>
    <groupId>org.sonarsource.analyzer-commons</groupId>
    <version>1.29-SNAPSHOT</version>
  </parent>

  <artifactId>sonar-regex-parsing</artifactId>
  <name>SonarSource Analyzers Regex Parsing Commons</name>
  <description>Logic useful to read and analyze regular expressions</description>

  <properties>
    <z3.version>4.10.1</z3.version>
    <project.dependency.relativepath>lib</project.dependency.relativepath>
    <project.dependency.path>${project.build.directory}/${project.dependency.relativepath}</project.dependency.path>
  </properties>

  <dependencies>
    <dependency>
        <groupId>org.sosy-lab</groupId>
        <artifactId>java-smt</artifactId>
        <version>3.14.2</version>
    </dependency>
    <dependency>
      <groupId>org.sosy-lab</groupId>
      <artifactId>javasmt-solver-z3</artifactId>
      <version>${z3.version}</version>
      <type>jar</type>
      <classifier>com.microsoft.z3</classifier>
    </dependency>
    <dependency>
      <groupId>org.sosy-lab</groupId>
      <artifactId>javasmt-solver-z3</artifactId>
      <version>${z3.version}</version>
      <type>so</type>
      <classifier>libz3</classifier>
    </dependency>
    <dependency>
      <groupId>org.sosy-lab</groupId>
      <artifactId>javasmt-solver-z3</artifactId>
      <version>${z3.version}</version>
      <type>so</type>
      <classifier>libz3java</classifier>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.api.plugin</groupId>
      <artifactId>sonar-plugin-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>sonar-analyzer-test-commons</artifactId>
      <version>${version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.snakeyaml</groupId>
      <artifactId>snakeyaml-engine</artifactId>
      <version>2.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- This step starts its own JVM that ignores system properties set by the user,
               because why would those ever be important?! -->
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <!-- For solvers with native binaries, you need to add the classpath to test properly.
                 This path needs to be the location of the sosy-lab.commons.jar and the solver binaries.
                 See maven-dependency-plugin below for more information. -->
            <argLine>-Djava.library.path=${project.dependency.path}</argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <manifest>
                <!-- For solvers with native binaries, you need to add the classpath to test properly.
                     This path needs to be the location of the sosy-lab.commons.jar and the solver binaries.
                     See maven-dependency-plugin below for more information. -->
                <addClasspath>true</addClasspath>
                <classpathPrefix>${project.dependency.relativepath}</classpathPrefix>
                <mainClass>org.sosy_lab.java_smt_example.SolverOverviewTable</mainClass>
              </manifest>
            </archive>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <!-- The dependency plugin allows us to copy or delete files. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <!-- The goal "copy" is used to change the name of the solver libraries (i.e. Z3)
                 from the name that is used internally in Maven to the normal name. -->
            <id>copy</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
          <execution>
            <!-- This copies all dependencies to ${project.dependency.path}. -->
            <!-- We do this, because the sosy-lab.commons dependency (in JavaSMT) searches the
                 native solver binaries (i.e. MathSAT or Z3) at specific locations and with specific names.
                 So we just copy the dependencies and set the classpath to this location.
                 You may of course change this if you know how to.
                 Default search locations for sosy-lab.commons:
                 (1) in its own folder (by far the easiest, just copy everything together) or
                 (2) in the "native library path" as returned by getNativeLibraryPath() in Java,
                 which is the directory ../native/<arch>-<os>/ relative to the JAR file of sosy-lab.commons,
                 with the following values depending on your system (arch=x86_64|x86; os=linux|windows|macosx). -->
            <id>copy-dependencies</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>${project.dependency.path}</outputDirectory>
          <artifactItems>
            <!-- Here we specify what we want to use for the goal "copy".
                 In our case we copy the solver dependencies (binaries) to change their names.
                 groupId/artifactId/version/type/classifier have to match the dependency!
                 We copy them to ${project.dependency.path} as this is the location
                 that copy-dependencies uses by default. destFileName specifies the final name.
                 You may only need some of the artifacts below, depending on what solver(s) you want.
                 Important: you NEED to set the classpath to ${project.dependency.path} or
                 wherever you have your sosy-lab.commons + solver binaries!   -->

            <!-- Z3 has two native libraries -->
            <artifactItem>
              <groupId>org.sosy-lab</groupId>
              <artifactId>javasmt-solver-z3</artifactId>
              <type>so</type>
              <classifier>libz3java</classifier>
              <destFileName>libz3java.so</destFileName>
            </artifactItem>
            <artifactItem>
              <groupId>org.sosy-lab</groupId>
              <artifactId>javasmt-solver-z3</artifactId>
              <type>so</type>
              <classifier>libz3</classifier>
              <destFileName>libz3.so</destFileName>
            </artifactItem>
          </artifactItems>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
